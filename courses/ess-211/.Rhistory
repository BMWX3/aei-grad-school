legend <- c("Actual Military Spending", "Modeled Military Spending", paste("RMSE:", format(rmse.vetSpending.log, nsmall = 2)))
ylim <- c(min(yearly$VeteranSpending.BUSD, vetSpending.predicted.log, na.rm = TRUE),
max(yearly$VeteranSpending.BUSD, vetSpending.predicted.log, na.rm = TRUE))
lwd <- c(3, 3, NA)
plot(yearly$Year, yearly$VeteranSpending.BUSD, type = 'l', col = colReal, xlab = xlab, ylab = ylab, lwd = lwd[1], ylim = ylim, main = title)
par(new = TRUE)
plot(yearly$Year, vetSpending.predicted.log, type = 'l', col = colPred, xlab = NA, ylab = NA, lwd = lwd[2], ylim = ylim, axes = FALSE)
legend("topleft", legend = legend, col = c(colReal, colPred, NA), lwd = lwd)
unemployment.mean <- mean(yearly$UnemploymentRate[unemployment.years])
unemployment.sd <- sd(yearly$UnemploymentRate[unemployment.years])
# run framework 1
framework1 <- unemployment.framework1(yearly, unemployment.sd)
# run framework 2
framework2 <- unemployment.framework2(yearly, unemployment.sd)
# run framework 3
framework3 <- unemployment.framework3(yearly, unemployment.sd)
unemployment.years <- which(dframe$UnemploymentRate < 1.)
unemployment.yearsToModel <- is.na(dframe$UnemploymentRate)
unemployment.mean <- mean(yearly$UnemploymentRate[unemployment.years])
unemployment.sd <- sd(yearly$UnemploymentRate[unemployment.years])
unemployment.years <- which(yearly$UnemploymentRate < 1.)
unemployment.yearsToModel <- is.na(yearly$UnemploymentRate)
unemployment.mean <- mean(yearly$UnemploymentRate[unemployment.years])
unemployment.sd <- sd(yearly$UnemploymentRate[unemployment.years])
# run framework 1
framework1 <- unemployment.framework1(yearly, unemployment.sd)
# run framework 2
framework2 <- unemployment.framework2(yearly, unemployment.sd)
# run framework 3
framework3 <- unemployment.framework3(yearly, unemployment.sd)
framework3
loss.rmse(yearly$UnemploymentRate[unemployment.years], framework1[unemployment.years])
yearly$UnemploymentRate[unemployment.years]
framework1[unemployment.years]
unemployment.framework1 <- function(dframe, sd){
# get basic unemployment info
unemployment.years <- which(dframe$UnemploymentRate < 1.)
unemployment.mean <- mean(dframe$UnemploymentRate[unemployment.years])
# generate some noise
noise <- rnorm(nrow(dframe), sd = sd)
# add the noise to the mean
framework1 = unemployment.mean + noise
return(framework1)
}
framework1 <- unemployment.framework1(yearly, unemployment.sd)
loss.rmse(yearly$UnemploymentRate[unemployment.years], framework1[unemployment.years])
loss.rmse(yearly$UnemploymentRate[unemployment.years], framework2[unemployment.years])
loss.rmse(yearly$UnemploymentRate[unemployment.years], framework3[unemployment.years])
rmsMat = matrix(nrow=100, ncol=3)
for (i in seq(1,100)){}
for (i in seq(1,100)){
framework1 <- unemployment.framework1(yearly, unemployment.sd)
framework2 <- unemployment.framework2(yearly, unemployment.sd)
framework3 <- unemployment.framework3(yearly, unemployment.sd)
rmsMat[i,1] <- loss.rmse(yearly$UnemploymentRate[unemployment.years], framework1[unemployment.years])
rmsMat[i,2] <- loss.rmse(yearly$UnemploymentRate[unemployment.years], framework2[unemployment.years])
rmsMat[i,3] <- loss.rmse(yearly$UnemploymentRate[unemployment.years], framework3[unemployment.years])
}
mean(rmsMat, 1)
mean(rmsMat, 2)
mean(rmsMat, 3)
?mean
mean(rmsMat[,1])
mean(rmsMat[,2])
mean(rmsMat[,3])
install.packages("ggtern")
install.packages("ggtern")
library(ggtern)
infile <- "~/cba/aei-grad-school/scratch/satellite_scales.csv"
satData <- read.csv(file = infile, header = TRUE)
satData$Satellite
satData$Satellite[1]
satData$Satellite[[1]]
?ggtern()
View(satData)
base = ggtern(data = satData, aes(UseScale, Swath, Frequency))
base
data("Feldspar")
View(Feldspar)
base + geom.point()
base + geom_point()
base = ggtern(data = satData, aes(UseScale, ln(Swath), Frequency))
base + geom_point()
satData["lnSwath"] = ln(satData$Swath)
satData["lnSwath"] = log(satData$Swath)
View(satData)
base = ggtern(data = satData, aes(UseScale, lnSwath, Frequency))
base + geom_point()
his(satData$Swath)
hist(satData$Swath)
hist(sqrt(satData$Swath))
hist(log(satData$Swath))
hist(log10(satData$Swath))
satData["logSwath"] = log10(satData$Swath)
base + geom_point()
hist(satData$Swath)
hist(satData$Frequency)
hist(satData$UseScale)
hist(log(satData$UseScale))
hist(log10(satData$UseScale))
satData["logScale"] = log10(satData$UseScale)
ggtern(data=SatData, aes(logScale, logSwath, Frequency))
ggtern(data=satData, aes(logScale, logSwath, Frequency))
ggtern(data=satData, aes(logScale, logSwath, Frequency)) + geom_point()
satData["logExtent"] = log10(satData$Extent)
ggtern(data=satData, aes(logScale, logExtent, Frequency)) + geom_point()
ggtern(data=satData, aes(Scale, logExtent, Frequency)) + geom_point()
ggtern(data=satData, aes(useScale, logExtent, Frequency)) + geom_point()
ggtern(data=satData, aes(UseScale, logExtent, Frequency)) + geom_point()
View(Feldspar)
ggtern(data=satData, aes(UseScale, logExtent, Frequency)) + geom_point(aes(fill=Type.II, shape=Type, size=1), color='black') + scale_shape_manual(values=c(21,22))
discrete_scale()
ggtern(data=satData, aes(UseScale, logExtent, Frequency)) + geom_point(aes(fill=Type.II, shape=Type, size=1), color='black') + scale_shape(values=c(21,22))
ggtern(data=satData, aes(UseScale, logExtent, Frequency)) + geom_point(aes(fill=Type.II, shape=Type, size=1), color='black') + scale_shape_manual(values=c(21,22,23))
ggtern(data=satData, discrete_scale(aes(UseScale, logExtent, Frequency), expand = c(0, 0.6))) + geom_point(aes(fill=Type.II, shape=Type, size=1), color='black') + scale_shape_manual(values=c(21,22,23))
ggtern(data=satData, discrete_scale(aes(UseScale, logExtent, Frequency), expand = c(0, 0.6), scale_name='name')) + geom_point(aes(fill=Type.II, shape=Type, size=1), color='black') + scale_shape_manual(values=c(21,22,23))
ggtern(data=satData, aes(UseScale, logExtent, Frequency)) + geom_point(aes(fill=Type.II, shape=Type, size=1)) + scale_shape(values=c(21,22))
ggtern(data=satData, aes(UseScale, logExtent, Frequency)) + geom_point(aes(fill=Type.II, shape=Type, size=1)) + scale_shape_manual(values=c(21,22))
df = as.data.frame(diag(1,3,3)) && base = ggtern(df,aes(V1,V2,V3)) + geom_polygon(fill='red') + theme_showarrows() && base && base + theme_gridsontop()
df = as.data.frame(diag(1,3,3)); base = ggtern(df,aes(V1,V2,V3)) + geom_polygon(fill='red') + theme_showarrows() ; base; base + theme_gridsontop()
base = ggtern(data = satData, aes(UseScale, Extent, Frequency)) +
geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
labs(x = xlab, y = ylab, z = zlab, title = title) +
theme_showarrows() +
theme_legend_position(x = "topleft") +
theme_tropical()
base
xlab <- "Sampling Unit (m^2)"
ylab <- "Extent (km^2)"
zlab <- "Frequency (days)"
title <- "Satellite Scales"
base = ggtern(data = satData, aes(UseScale, Extent, Frequency)) +
geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
labs(x = xlab, y = ylab, z = zlab, title = title) +
theme_showarrows() +
theme_legend_position(x = "topleft") +
theme_tropical()
base
theme_dark()
base + theme_dark()
shapeValues = c(21,22)
xlab <- "Sampling Unit (m^2)"
ylab <- "Extent (km^2)"
zlab <- "Frequency (days)"
title <- "Satellite Scales"
shapeValues = c(21,22)
# set up the basic plot function
base = ggtern(data = satData, aes(UseScale, Extent, Frequency)) +
geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues)
labs(x = xlab, y = ylab, z = zlab, title = title) +
theme_showarrows() +
theme_legend_position(x = "topleft")
base
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency)) +
geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues)
labs(x = xlab, y = ylab, z = zlab, title = title) +
theme_showarrows() +
theme_legend_position(x = "topleft")
base
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
labs(x = xlab, y = ylab, z = zlab, title = title) +
theme_showarrows() +
theme_legend_position(x = "topleft")
theme_nolabels()
base + theme_nolabels()
base + theme_notitles()
base + theme_notitles() + labs(title = "this")
base = base +theme_notitles()
base + labs(title = "this")
base + labs(title = "this") + theme_legend_position(x = topcenter)
base + labs(title = "this") + theme_legend_position(x = "topcenter")
base + labs(title = "this") + theme_legend_position(x = "topmiddle")
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base
base = base + theme_nolabels()
base
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base
base = base + labs(title = title) +
theme_legend_position(x = "topmiddle")
base
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base = base + labs(y = title)
base
unique(satData$Type.II)
len(unique(satData$Type.II))
length(unique(satData$Type.II))
length(unique(satData$Type))
bquote()
bquote("m^2")
SensorType = satData$Type
shapeValues = seq(length(unique(SensorType))) + 20
shapeValues
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = ccbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base
scale_shape_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base = base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base
base = base + geom_point(aes(fill=Type.II, shape=Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette)
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill=Type.II, shape=Sensor.Type)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette)
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base
Sensor.Type = satData$Type
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill=Type.II, shape=Sensor.Type)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette)
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles()
base
base = ggtern(data = satData, aes(UseScale, logExtent, Frequency))
base = base + geom_point(aes(fill = Type.II, shape = Sensor.Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base + theme_anticlockwise()
base + theme_clockwise()
base + theme_anticlockwise()
hist(satData$UseScale)
hist(satData$logScale)
infile <- "~/cba/aei-grad-school/scratch/satellite_scales.csv"
satData <- read.csv(file = infile, header = TRUE)
satData["logExtent"] = log10(satData$Extent)
satData["lnExtent"] = log(satData$Extent)
satData["logScale"] = log10(satData$UseScale)
satData['lnScale'] = log(satData$UseScale)
xlab <- "Sampling Unit (m^2)"
xdata <- satData$UseScale
ylab <- "Extent (km^2)"
ydata <- satData$logExtent
zlab <- "Frequency (days)"
zdata <- satData$Frequency
# set the data used for plot shapes
Sensor.Type = satData$Type
shapeValues = seq(length(unique(SensorType))) + 20
hist(satData$logScale)
hist(satData$lnScale)
hist(satData$logScale)
hist(satData$logExtent)
hist(satData$Frequency)
satData["logFreq"] = log10(satData$Frequency)
satData['lnFreq'] = log(satData$Frequency)
hist(satData$lnFreq)
hist(satData$logFreq)
hist(satData$Swath)
satData["logSwath"] = log10(satData$Swath)
satData['lnSwath'] = log(satData$Swath)
hist(satData$lnSwath)
hist(satData$logSwath)
hist(satData$lnScale)
hist(satData$logScale)
xlab <- "Sampling Unit (m^2)"
xdata <- satData$UseScale
ylab <- "Extent (km^2)"
ydata <- satData$logExtent
zlab <- "Frequency (days)"
zdata <- satData$lnFreq
# set the data used for plot shapes
EBV.Class = satData$EBV.Class
shapeValues = seq(length(unique(EBV.Class))) + 20
# set the data used for plot colors
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
title <- "Satellite Scales"
# set up the basic plot function
base = ggtern(data = satData, aes(logScale, logExtent, lnFreq))
base = base + geom_point(aes(fill = Type.II, shape = Sensor.Type, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = base + geom_point(aes(fill = EBV, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, logExtent, lnFreq))
base = base + geom_point(aes(fill = EBV, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
g = colorRampPalette(cbbPalette)
g
g = colorRampPalette(cbbPalette)(15)
g
cbbBase <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- colorRampPalette(cbbBase)(length(unique(satData$EBV)))
title <- "Satellite Scales"
# set up the basic plot function
base = ggtern(data = satData, aes(logScale, logExtent, lnFreq))
base = base + geom_point(aes(fill = EBV, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, logExtent, logFreq))
base = base + geom_point(aes(fill = EBV, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, logSwath, lnFreq))
base = base + geom_point(aes(fill = EBV, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
cbbPalette <- colorRampPalette(cbbBase)(length(unique(satData$EBV.Class)))
title <- "Satellite Scales"
base = ggtern(data = satData, aes(logScale, logSwath, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
library(ggtern)
# load the csv file
infile <- "~/cba/aei-grad-school/scratch/satellite_scales.csv"
satData <- read.csv(file = infile, header = TRUE)
# transform the data to get a good distribution of values
satData["logExtent"] = log10(satData$Extent)
satData["lnExtent"] = log(satData$Extent)
satData["logScale"] = log10(satData$UseScale)
satData['lnScale'] = log(satData$UseScale)
satData["logFreq"] = log10(satData$Frequency)
satData['lnFreq'] = log(satData$Frequency)
satData["logSwath"] = log10(satData$Swath)
satData['lnSwath'] = log(satData$Swath)
# set up plot formats
xlab <- "Sampling Unit (m^2)"
xdata <- satData$UseScale
ylab <- "Extent (km^2)"
ydata <- satData$logExtent
zlab <- "Frequency (days)"
zdata <- satData$lnFreq
# set the data used for plot shapes
EBV.Class = satData$EBV.Class
shapeValues = seq(length(unique(EBV.Class))) + 20
# set the data used for plot colors
cbbBase <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- colorRampPalette(cbbBase)(length(unique(satData$EBV.Class)))
title <- "Satellite Scales"
# set up the basic plot function
base = ggtern(data = satData, aes(logScale, logSwath, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
hist(logScale)
hist(satData$logScale)
hist(satData$lnScale)
base = ggtern(data = satData, aes(lnScale, logSwath, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, logExtent, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, lnExtent, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, lnSwath, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
satData["Frequency"] = 1/satData$Frequency
satData["logExtent"] = log10(satData$Extent)
satData["lnExtent"] = log(satData$Extent)
satData["logScale"] = log10(satData$UseScale)
satData['lnScale'] = log(satData$UseScale)
satData["logFreq"] = log10(satData$Frequency)
satData['lnFreq'] = log(satData$Frequency)
satData["logSwath"] = log10(satData$Swath)
satData['lnSwath'] = log(satData$Swath)
# set up plot formats
xlab <- "Sampling Unit (m^2)"
xdata <- satData$UseScale
ylab <- "Extent (km^2)"
ydata <- satData$logExtent
zlab <- "Frequency (1/days)"
zdata <- satData$lnFreq
# set the data used for plot shapes
EBV.Class = satData$EBV.Class
shapeValues = seq(length(unique(EBV.Class))) + 20
# set the data used for plot colors
cbbBase <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cbbPalette <- colorRampPalette(cbbBase)(length(unique(satData$EBV.Class)))
title <- "Satellite Scales"
# set up the basic plot function
base = ggtern(data = satData, aes(logScale, lnSwath, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 1)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, lnSwath, lnFreq))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 2)) +
scale_shape_manual(values = shapeValues) +
scale_fill_manual(values = cbbPalette) +
theme_nomask() +
labs(x = xlab, y = ylab, z = zlab) +
theme_showarrows()
base = base + theme_notitles() + theme_nolabels()
base
base = ggtern(data = satData, aes(logScale, lnSwath, Frequency))
base = base + geom_point(aes(fill = EBV.Class, shape = EBV.Class, size = 2)) +
